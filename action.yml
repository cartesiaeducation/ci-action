name: 'Deploy Action'
description: 'A reusable GitHub Action for executing tests.'
inputs:
  slack_bot_token:
    description: 'Slack bot token'
    required: true
  slack_channel_id:
    description: 'Slack notification channel ID'
    required: true
  ssh_private_key:
    description: 'SSH private key'
    required: true
  git_organization:
    description: 'Git organization'
    required: true
  git_token:
    description: 'Git token'
    required: true
  admin_domain:
    description: 'Organization admin domain'
    required: true
  corporate_domain:
    description: 'Organization corporate domain'
    required: true
  phpunit:
    description: 'Execute phpunit tests'
    required: false
    default: 'false'
  behat:
    description: 'Execute behat tests'
    required: false
    default: 'false'
  jest:
    description: 'Execute jest tests'
    required: false
    default: 'false'
  nb_workers:
    description: 'Number of workers'
    required: false
  custom_env:
    description: 'Custom environment variables as key=value pairs'
    required: false
  jest_command:
    description: 'Custom Jest command'
    required: false
    default: 'npm run test --runInBand --silent'
  ip_recette:
    description: 'IP address for the recette environment'
    required: false
  ip_demo:
    description: 'IP address for the demo environment'
    required: false
  ip_prod:
    description: 'IP address for the prod environment'
    required: false
  transfer_assets:
    description: 'Transfer server assets'
    required: false
    default: 'true'
  deploy_to_recette:
    description: 'Deploy to recette'
    required: false
    default: 'false'
  deploy_to_demo:
    description: 'Deploy to demo'
    required: false
    default: 'false'
  deploy_to_prod:
    description: 'Deploy to prod'
    required: false
    default: 'false'
  sentry_auth_token:
    description: 'Sentry auth token'
    required: true
  sentry_org:
    description: 'Sentry organization slug'
    required: true
  sentry_project:
    description: 'Sentry project token'
    required: true

runs:
  using: 'composite'
  steps:
    - id: slack
      uses: slackapi/slack-github-action@v1.25.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        payload: |
          {
            "text": "<https://github.com/${{ github.repository }}|${{ github.repository }}> : Build started in branch `${{ github.ref_name }}` (In Progress) üöÄ",
            "attachments": [{ "pretext": "Initialisation", "color": "dbab09" }]
          }
    
    - name: Store Slack message timestamp
      run: echo "SLACK_TS=${{ steps.slack.outputs.ts }}" >> $GITHUB_ENV
      shell: bash
    
    # üìå Mise √† jour Slack - D√©but de l'installation
    - name: Slack - Installation des d√©pendances
      if: always()
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "üîÑ Installation des d√©pendances en cours...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Install dependencies
      shell: bash
      run: docker exec -u www-data web bash install-dependencies.sh
    
    # üìå Mise √† jour Slack - D√©but des tests
    - name: Slack - Ex√©cution des tests
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "üß™ Ex√©cution des tests...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: PHPUnit
      if: inputs.phpunit == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "SYMFONY_DEPRECATIONS_HELPER=weak ./vendor/bin/paratest -p ${{ steps.cpu_cores.outputs.cores }} --runner=WrapperRunner --stop-on-failure"
    
    - name: Jest
      if: inputs.jest == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "${{ inputs.jest_command }}"
    
    - name: Behat
      if: inputs.behat == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "./vendor/bin/behat -l ${{ steps.cpu_cores.outputs.cores }} --suite=default --stop-on-failure"
    
    # üìå Mise √† jour Slack - Build et transfert des assets
    - name: Slack - Build des assets
      if: success() && inputs.transfer_assets == 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-'))
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "üì¶ Build et transfert des assets...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Build server assets
      if: success() && inputs.transfer_assets == 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-'))
      shell: bash
      run: docker exec -u www-data web bash build-server-assets.sh
    
    # üìå Mise √† jour Slack - D√©ploiement en cours
    - name: Slack - D√©ploiement en cours
      if: success() && (startsWith(github.ref, 'refs/heads/release-') || github.ref == 'refs/heads/master')
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "üöÄ D√©ploiement en cours...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Deploy to recette
      if: startsWith(github.ref, 'refs/heads/release-') && inputs.deploy_to_recette == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_recette }} bundle exec cap recette deploy
      shell: bash
    
    - name: Deploy to demo
      if: github.ref == 'refs/heads/master' && inputs.deploy_to_demo == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_demo }} bundle exec cap staging deploy
      shell: bash
    
    - name: Deploy to prod
      if: github.ref == 'refs/heads/master' && inputs.deploy_to_prod == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_prod }} bundle exec cap prod deploy
      shell: bash
    
    # üìå Slack - Mise √† jour finale (succ√®s ou √©chec)
    - name: Slack - Statut final
      if: ${{ always() }}
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          {
            "text": "<https://github.com/${{ github.repository }}|${{ github.repository }}> : Build termin√© en branch `${{ github.ref_name }}`",
            "attachments": [
              {
                "pretext": "üìù Statut final",
                "color": "${{ job.status == 'success' && '28a745' || 'ff0000' }}",
                "fields": [
                  { "title": "Status", "value": "${{ job.status == 'success' && '‚úÖ Succ√®s' || '‚ùå √âchec' }}", "short": true }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}