runs:
  using: 'composite'
  steps:
    - id: slack
      uses: slackapi/slack-github-action@v1.25.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        payload: |
          {
            "text": "<https://github.com/${{ github.repository }}|${{ github.repository }}> : Build started in branch `${{ github.ref_name }}` (In Progress) 🚀",
            "attachments": [{ "pretext": "Initialisation", "color": "dbab09" }]
          }
    
    - name: Store Slack message timestamp
      run: echo "SLACK_TS=${{ steps.slack.outputs.ts }}" >> $GITHUB_ENV
      shell: bash
    
    # 📌 Mise à jour Slack - Début de l'installation
    - name: Slack - Installation des dépendances
      if: always()
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "🔄 Installation des dépendances en cours...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Install dependencies
      shell: bash
      run: docker exec -u www-data web bash install-dependencies.sh
    
    # 📌 Mise à jour Slack - Début des tests
    - name: Slack - Exécution des tests
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "🧪 Exécution des tests...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: PHPUnit
      if: inputs.phpunit == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "SYMFONY_DEPRECATIONS_HELPER=weak ./vendor/bin/paratest -p ${{ steps.cpu_cores.outputs.cores }} --runner=WrapperRunner --stop-on-failure"
    
    - name: Jest
      if: inputs.jest == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "${{ inputs.jest_command }}"
    
    - name: Behat
      if: inputs.behat == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: docker exec -u www-data web bash -c "./vendor/bin/behat -l ${{ steps.cpu_cores.outputs.cores }} --suite=default --stop-on-failure"
    
    # 📌 Mise à jour Slack - Build et transfert des assets
    - name: Slack - Build des assets
      if: success() && inputs.transfer_assets == 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-'))
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "📦 Build et transfert des assets...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Build server assets
      if: success() && inputs.transfer_assets == 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-'))
      shell: bash
      run: docker exec -u www-data web bash build-server-assets.sh
    
    # 📌 Mise à jour Slack - Déploiement en cours
    - name: Slack - Déploiement en cours
      if: success() && (startsWith(github.ref, 'refs/heads/release-') || github.ref == 'refs/heads/master')
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          { "attachments": [{ "pretext": "🚀 Déploiement en cours...", "color": "dbab09" }] }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
    
    - name: Deploy to recette
      if: startsWith(github.ref, 'refs/heads/release-') && inputs.deploy_to_recette == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_recette }} bundle exec cap recette deploy
      shell: bash
    
    - name: Deploy to demo
      if: github.ref == 'refs/heads/master' && inputs.deploy_to_demo == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_demo }} bundle exec cap staging deploy
      shell: bash
    
    - name: Deploy to prod
      if: github.ref == 'refs/heads/master' && inputs.deploy_to_prod == 'true'
      run: BRANCH=${{ github.ref_name }} IP=${{ inputs.ip_prod }} bundle exec cap prod deploy
      shell: bash
    
    # 📌 Slack - Mise à jour finale (succès ou échec)
    - name: Slack - Statut final
      if: ${{ always() }}
      uses: slackapi/slack-github-action@v1.25.0
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ env.SLACK_TS }}
        payload: |
          {
            "text": "<https://github.com/${{ github.repository }}|${{ github.repository }}> : Build terminé en branch `${{ github.ref_name }}`",
            "attachments": [
              {
                "pretext": "📝 Statut final",
                "color": "${{ job.status == 'success' && '28a745' || 'ff0000' }}",
                "fields": [
                  { "title": "Status", "value": "${{ job.status == 'success' && '✅ Succès' || '❌ Échec' }}", "short": true }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
